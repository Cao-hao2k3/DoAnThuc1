// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThanTai.Models;

#nullable disable

namespace ThanTai.Migrations
{
    [DbContext(typeof(ThanTaiShopDbContext))]
    [Migration("20250331063913_CSDL33")]
    partial class CSDL33
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ThanTai.Models.BanTin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Banner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.ToTable("BanTin");
                });

            modelBuilder.Entity("ThanTai.Models.DanhGiaSanPham", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("BinhLuan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayDanhGia")
                        .HasColumnType("datetime2");

                    b.Property<int>("NguoiDungID")
                        .HasColumnType("int");

                    b.Property<int>("SanPhamID")
                        .HasColumnType("int");

                    b.Property<int>("SoSao")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("NguoiDungID");

                    b.HasIndex("SanPhamID");

                    b.ToTable("DanhGiaSanPham");
                });

            modelBuilder.Entity("ThanTai.Models.DatHang", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("DiaChiGiaoHang")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DienThoaiNguoiDat")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("HinhThucGiaoHang")
                        .HasColumnType("int");

                    b.Property<int>("HinhThucThanhToan")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDatHang")
                        .HasColumnType("datetime2");

                    b.Property<int>("NguoiDungID")
                        .HasColumnType("int");

                    b.Property<string>("SoDienThoaiNguoiNhanKhac")
                        .HasMaxLength(225)
                        .HasColumnType("nvarchar(225)");

                    b.Property<string>("TenNguoiDat")
                        .IsRequired()
                        .HasMaxLength(225)
                        .HasColumnType("nvarchar(225)");

                    b.Property<string>("TenNguoiNhanHangKhac")
                        .HasMaxLength(225)
                        .HasColumnType("nvarchar(225)");

                    b.Property<int>("TinhTrangID")
                        .HasColumnType("int");

                    b.Property<int>("TinhTrangThanhToan")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("NguoiDungID");

                    b.HasIndex("TinhTrangID");

                    b.ToTable("DatHang");
                });

            modelBuilder.Entity("ThanTai.Models.DatHangChiTiet", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("DatHangID")
                        .HasColumnType("int");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SanPhamID")
                        .HasColumnType("int");

                    b.Property<short>("SoLuong")
                        .HasColumnType("smallint");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("DatHangID");

                    b.HasIndex("SanPhamID");

                    b.ToTable("DatHangChiTiet");
                });

            modelBuilder.Entity("ThanTai.Models.GiaTriThuocTinh", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("GiaTri")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("SanPhamID")
                        .HasColumnType("int");

                    b.Property<int>("ThuocTinhID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SanPhamID");

                    b.HasIndex("ThuocTinhID");

                    b.ToTable("GiaTriThuocTinh");
                });

            modelBuilder.Entity("ThanTai.Models.GioHang", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("NguoiDungID")
                        .HasColumnType("int");

                    b.Property<int>("SanPhamID")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("NguoiDungID");

                    b.HasIndex("SanPhamID");

                    b.ToTable("GioHang");
                });

            modelBuilder.Entity("ThanTai.Models.HinhAnhSanPham", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AnhSanPham")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("AnhThongSo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("SanPhamID")
                        .HasColumnType("int");

                    b.Property<string>("VideoReview")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("ID");

                    b.HasIndex("SanPhamID");

                    b.ToTable("HinhAnhSanPham");
                });

            modelBuilder.Entity("ThanTai.Models.KhuyenMai", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("GiaTriGiam")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("KieuKhuyenMai")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<int>("SanPhamID")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SanPhamID");

                    b.ToTable("KhuyenMai");
                });

            modelBuilder.Entity("ThanTai.Models.LoaiSanPham", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<string>("Tenloai")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("ParentID");

                    b.ToTable("LoaiSanPham");
                });

            modelBuilder.Entity("ThanTai.Models.NguoiDung", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Anh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DienThoai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("HoVaTen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Quyen")
                        .HasColumnType("bit");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("NguoiDung");
                });

            modelBuilder.Entity("ThanTai.Models.QuanLyKhoHang", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoaiGiaoDich")
                        .HasColumnType("int");

                    b.Property<int>("NguoiDungID")
                        .HasColumnType("int");

                    b.Property<int>("SanPhamID")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGian")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("NguoiDungID");

                    b.HasIndex("SanPhamID");

                    b.ToTable("QuanLyKhoHang");
                });

            modelBuilder.Entity("ThanTai.Models.SanPham", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GiaSauKhiGiam")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("GiamGia")
                        .HasColumnType("int");

                    b.Property<int>("LoaiSanPhamID")
                        .HasColumnType("int");

                    b.Property<int>("LuotBan")
                        .HasColumnType("int");

                    b.Property<int>("LuotDanhGia")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("ntext");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ThongTinThongSo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThuongHieuID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("LoaiSanPhamID");

                    b.HasIndex("ThuongHieuID");

                    b.ToTable("SanPham");
                });

            modelBuilder.Entity("ThanTai.Models.ThuocTinh", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("LoaiSanPhamID")
                        .HasColumnType("int");

                    b.Property<string>("TenThuocTinh")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("LoaiSanPhamID");

                    b.ToTable("ThuocTinh");
                });

            modelBuilder.Entity("ThanTai.Models.ThuongHieu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("TenThuongHieu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("ThuongHieu");
                });

            modelBuilder.Entity("ThanTai.Models.TinhTrang", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.ToTable("TinhTrang");
                });

            modelBuilder.Entity("ThanTai.Models.DanhGiaSanPham", b =>
                {
                    b.HasOne("ThanTai.Models.NguoiDung", "NguoiDung")
                        .WithMany("DanhGiaSanPham")
                        .HasForeignKey("NguoiDungID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThanTai.Models.SanPham", "SanPham")
                        .WithMany("DanhGiaSanPham")
                        .HasForeignKey("SanPhamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("ThanTai.Models.DatHang", b =>
                {
                    b.HasOne("ThanTai.Models.NguoiDung", "NguoiDung")
                        .WithMany("DatHang")
                        .HasForeignKey("NguoiDungID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThanTai.Models.TinhTrang", "TinhTrang")
                        .WithMany("DatHang")
                        .HasForeignKey("TinhTrangID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");

                    b.Navigation("TinhTrang");
                });

            modelBuilder.Entity("ThanTai.Models.DatHangChiTiet", b =>
                {
                    b.HasOne("ThanTai.Models.DatHang", "DatHang")
                        .WithMany("DatHangChiTiet")
                        .HasForeignKey("DatHangID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThanTai.Models.SanPham", "SanPham")
                        .WithMany("DatHangChiTiet")
                        .HasForeignKey("SanPhamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DatHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("ThanTai.Models.GiaTriThuocTinh", b =>
                {
                    b.HasOne("ThanTai.Models.SanPham", "SanPham")
                        .WithMany("GiaTriThuocTinh")
                        .HasForeignKey("SanPhamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThanTai.Models.ThuocTinh", "ThuocTinh")
                        .WithMany("GiaTriThuocTinh")
                        .HasForeignKey("ThuocTinhID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPham");

                    b.Navigation("ThuocTinh");
                });

            modelBuilder.Entity("ThanTai.Models.GioHang", b =>
                {
                    b.HasOne("ThanTai.Models.NguoiDung", "NguoiDung")
                        .WithMany("GioHang")
                        .HasForeignKey("NguoiDungID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThanTai.Models.SanPham", "SanPham")
                        .WithMany("GioHang")
                        .HasForeignKey("SanPhamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("ThanTai.Models.HinhAnhSanPham", b =>
                {
                    b.HasOne("ThanTai.Models.SanPham", "SanPham")
                        .WithMany("HinhAnhSanPham")
                        .HasForeignKey("SanPhamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("ThanTai.Models.KhuyenMai", b =>
                {
                    b.HasOne("ThanTai.Models.SanPham", "SanPham")
                        .WithMany("KhuyenMai")
                        .HasForeignKey("SanPhamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("ThanTai.Models.LoaiSanPham", b =>
                {
                    b.HasOne("ThanTai.Models.LoaiSanPham", "ParentCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentID");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("ThanTai.Models.QuanLyKhoHang", b =>
                {
                    b.HasOne("ThanTai.Models.NguoiDung", "NguoiDung")
                        .WithMany("QuanLyKhoHang")
                        .HasForeignKey("NguoiDungID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThanTai.Models.SanPham", "SanPham")
                        .WithMany("QuanLyKhoHang")
                        .HasForeignKey("SanPhamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("ThanTai.Models.SanPham", b =>
                {
                    b.HasOne("ThanTai.Models.LoaiSanPham", "LoaiSanPham")
                        .WithMany("SanPham")
                        .HasForeignKey("LoaiSanPhamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThanTai.Models.ThuongHieu", "ThuongHieu")
                        .WithMany("SanPham")
                        .HasForeignKey("ThuongHieuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiSanPham");

                    b.Navigation("ThuongHieu");
                });

            modelBuilder.Entity("ThanTai.Models.ThuocTinh", b =>
                {
                    b.HasOne("ThanTai.Models.LoaiSanPham", "LoaiSanPham")
                        .WithMany("ThuocTinh")
                        .HasForeignKey("LoaiSanPhamID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("LoaiSanPham");
                });

            modelBuilder.Entity("ThanTai.Models.DatHang", b =>
                {
                    b.Navigation("DatHangChiTiet");
                });

            modelBuilder.Entity("ThanTai.Models.LoaiSanPham", b =>
                {
                    b.Navigation("SanPham");

                    b.Navigation("SubCategories");

                    b.Navigation("ThuocTinh");
                });

            modelBuilder.Entity("ThanTai.Models.NguoiDung", b =>
                {
                    b.Navigation("DanhGiaSanPham");

                    b.Navigation("DatHang");

                    b.Navigation("GioHang");

                    b.Navigation("QuanLyKhoHang");
                });

            modelBuilder.Entity("ThanTai.Models.SanPham", b =>
                {
                    b.Navigation("DanhGiaSanPham");

                    b.Navigation("DatHangChiTiet");

                    b.Navigation("GiaTriThuocTinh");

                    b.Navigation("GioHang");

                    b.Navigation("HinhAnhSanPham");

                    b.Navigation("KhuyenMai");

                    b.Navigation("QuanLyKhoHang");
                });

            modelBuilder.Entity("ThanTai.Models.ThuocTinh", b =>
                {
                    b.Navigation("GiaTriThuocTinh");
                });

            modelBuilder.Entity("ThanTai.Models.ThuongHieu", b =>
                {
                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("ThanTai.Models.TinhTrang", b =>
                {
                    b.Navigation("DatHang");
                });
#pragma warning restore 612, 618
        }
    }
}
